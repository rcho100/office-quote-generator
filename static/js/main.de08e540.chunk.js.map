{"version":3,"sources":["components/Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","useState","quote","setQuote","quoteAuthor","setQuoteAuthor","useEffect","getQuoteData","fetch","then","res","json","data","content","character","firstname","lastname","className","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMA0CeA,EAxCA,WAAO,IAAD,EAEOC,mBAAS,IAFhB,mBAEZC,EAFY,KAELC,EAFK,OAGmBF,mBAAS,IAH5B,mBAGZG,EAHY,KAGCC,EAHD,KAKnBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAe,WACnB,OAAOC,MAAM,+CACZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJT,EAASS,EAAKA,KAAKC,SACnBR,EAAe,GAAD,OAAIO,EAAKA,KAAKE,UAAUC,UAAxB,YAAqCH,EAAKA,KAAKE,UAAUE,eAQ3E,OACE,sBAAKC,UAAU,YAAf,UAEE,qBAAKA,UAAU,OAAf,SACE,4BAAIf,MAGN,qBAAKe,UAAU,SAAf,SACE,mCAAMb,OAGR,qBAAKa,UAAU,UAAf,SACE,wBAAQC,QAhBM,WAClBX,KAekCU,UAAU,gBAAxC,6BCzBOE,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCMSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.de08e540.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Quotes = () => {\n\n  const [quote, setQuote] = useState('');\n  const [quoteAuthor, setQuoteAuthor] = useState('');\n\n  useEffect(() => {\n    getQuoteData();\n  }, [])\n\n  const getQuoteData = () => {\n    return fetch('https://www.officeapi.dev/api/quotes/random')\n    .then(res => res.json())\n    .then(data => {\n      setQuote(data.data.content);\n      setQuoteAuthor(`${data.data.character.firstname} ${data.data.character.lastname}`);\n    })\n  }\n\n  const handleClick = () => {\n    getQuoteData();\n  }\n\n  return (\n    <div className='quote-box'>\n\n      <div className='text'>\n        <p>{quote}</p>\n      </div>\n\n      <div className='author'>\n        <p>- {quoteAuthor}</p>\n      </div>\n\n      <div className='div-btn'>\n        <button onClick={handleClick} className=\"new-quote-btn\">New Quote</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Quotes;","import './App.css';\nimport Quotes from './components/Quotes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quotes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}